openapi: 3.0.0
servers:
  - url: /

info:
  description: Standard API for IDHAN
  version: "1.0.555"
  title: IDHAN API
  contact:
    email: kj16609@lolicon.zip
tags:
  - name: public
    description: Public access
  - name: access-locked
    description: Locked behind usage of an access key
  - name: tags
    description: Tag related operations
  - name: files
    description: File related operations


components:
  schemas:
    TagIDSet:
      description: "Two tag component ids"
      type: object
      properties:
        namespace_id:
          type: integer
        subtag_id:
          type: integer
    TagSet:
      description: "Two strings that make up a tag"
      type: object
      properties:
        namespace:
          type: string
          example: "character"
        subtag:
          type: string
          example: "toujou koneko"
    TagInput:
      oneOf:
        - $ref: "#/components/schemas/TagIDSet"
        - $ref: "#/components/schemas/TagSet"
    TagColor:
      description: "RBG Values are provided for ease of use."
      type: object
      properties:
        hex:
          type: string
          example: "F0F0F0"
        r:
          type: integer
          minimum: 0
          maximum: 255
        g:
          type: integer
          minimum: 0
          maximum: 255
        b:
          type: integer
          minimum: 0
          maximum: 255
    TagID:
      type: integer
    TagInfo:
      type: object
      properties:
        tag_id:
          $ref: "#/components/schemas/TagID"
        color:
          $ref: "#/components/schemas/TagColor"
    Version:
      type: object
      properties:
        string:
          description: "Simple string for easy display"
          type: string
          example: "1.0.0"
        major:
          type: integer
          example: 1
        minor:
          type: integer
          example: 0
        patch:
          type: integer
          example: 0
    VersionInfo:
      type: object
      properties:
        idhan_version:
          $ref: "#/components/schemas/Version"
        idhan_api_version:
          $ref: "#/components/schemas/Version"
        hydrus_api_version:
          type: integer

  securitySchemes:
    AccessKey:
      type: apiKey
      in: header
      name: "IDHAN-Api-Key"

  responses:
    AuthError:
      description: API key is missing or invalid

  parameters:
    AccessKey:
      in: header
      name:
        $ref: "#/components/securitySchemes/AccessKey/name"
      required: true
      schema:
        type: string


paths:
  /version:
    get:
      tags:
        - public
      summary: Returns version info
      responses:
        "200":
          description: Json object with info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionInfo"

  /tag/{tag_id}/info:
    get:
      tags:
        - tags
      summary: Returns info related to the tag
      parameters:
        - in: path
          name: tag_id
          schema:
            $ref: "#/components/schemas/TagID"
          required: true
          description: Numeric ID representing a tag
        - $ref: "#/components/parameters/AccessKey"

      security:
        - AccessKey: [ ]
      responses:
        "200":
          description: json
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagInfo"
        "403":
          $ref: "#/components/responses/AuthError"

  /tag/create:
    post:
      tags:
        - tags
      summary: Creates a tag and returns it's ID
      requestBody:
        description: "Must either contain a json object of namespace_id, subtag_id or namespace, subtag (See Schema)"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagInput"
      responses:
        "403":
          $ref: "#/components/responses/AuthError"
